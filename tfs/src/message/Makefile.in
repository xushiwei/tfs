# Makefile.in generated by automake 1.9.6 from Makefile.am.
# @configure_input@

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005  Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@

srcdir = @srcdir@
top_srcdir = @top_srcdir@
VPATH = @srcdir@
pkgdatadir = $(datadir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
top_builddir = ../..
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
INSTALL = @INSTALL@
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = @build@
host_triplet = @host@
subdir = src/message
DIST_COMMON = $(srcdir)/Makefile.am $(srcdir)/Makefile.in
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(install_sh) -d
CONFIG_CLEAN_FILES =
LIBRARIES = $(noinst_LIBRARIES)
ARFLAGS = cru
libtfsmessage_a_AR = $(AR) $(ARFLAGS)
libtfsmessage_a_LIBADD =
am__objects_1 =
am_libtfsmessage_a_OBJECTS =  \
	libtfsmessage_a-dump_plan_message.$(OBJEXT) \
	libtfsmessage_a-client_cmd_message.$(OBJEXT) \
	libtfsmessage_a-heart_message.$(OBJEXT) \
	libtfsmessage_a-oplog_sync_message.$(OBJEXT) \
	libtfsmessage_a-crc_error_message.$(OBJEXT) \
	libtfsmessage_a-reload_message.$(OBJEXT) \
	libtfsmessage_a-unlink_file_message.$(OBJEXT) \
	libtfsmessage_a-file_info_message.$(OBJEXT) \
	libtfsmessage_a-rollback_message.$(OBJEXT) \
	libtfsmessage_a-rename_file_message.$(OBJEXT) \
	libtfsmessage_a-replicate_block_message.$(OBJEXT) \
	libtfsmessage_a-compact_block_message.$(OBJEXT) \
	libtfsmessage_a-create_filename_message.$(OBJEXT) \
	libtfsmessage_a-server_status_message.$(OBJEXT) \
	libtfsmessage_a-dataserver_message.$(OBJEXT) \
	libtfsmessage_a-close_file_message.$(OBJEXT) \
	libtfsmessage_a-read_data_message.$(OBJEXT) \
	libtfsmessage_a-write_data_message.$(OBJEXT) \
	libtfsmessage_a-block_info_message.$(OBJEXT) \
	libtfsmessage_a-admin_cmd_message.$(OBJEXT) \
	libtfsmessage_a-rc_session_message.$(OBJEXT) \
	libtfsmessage_a-message_factory.$(OBJEXT) \
	libtfsmessage_a-get_dataserver_information_message.$(OBJEXT) \
	$(am__objects_1)
libtfsmessage_a_OBJECTS = $(am_libtfsmessage_a_OBJECTS)
DEFAULT_INCLUDES = -I. -I$(srcdir)
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
LTCXXCOMPILE = $(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CXXFLAGS) $(CXXFLAGS)
CXXLD = $(CXX)
CXXLINK = $(LIBTOOL) --tag=CXX --mode=link $(CXXLD) $(AM_CXXFLAGS) \
	$(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(LIBTOOL) --tag=CC --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
SOURCES = $(libtfsmessage_a_SOURCES)
DIST_SOURCES = $(libtfsmessage_a_SOURCES)
ETAGS = etags
CTAGS = ctags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = @ACLOCAL@
AMDEP_FALSE = @AMDEP_FALSE@
AMDEP_TRUE = @AMDEP_TRUE@
AMTAR = @AMTAR@
AR = @AR@
AUTOCONF = @AUTOCONF@
AUTOHEADER = @AUTOHEADER@
AUTOMAKE = @AUTOMAKE@
AWK = @AWK@
CC = @CC@
CCDEPMODE = @CCDEPMODE@
CFLAGS = @CFLAGS@
CPP = @CPP@
CPPFLAGS = @CPPFLAGS@
CXX = @CXX@
CXXCPP = @CXXCPP@
CXXDEPMODE = @CXXDEPMODE@
CXXFLAGS = @CXXFLAGS@
CYGPATH_W = @CYGPATH_W@
DEFS = @DEFS@
DEPDIR = @DEPDIR@
ECHO = @ECHO@
ECHO_C = @ECHO_C@
ECHO_N = @ECHO_N@
ECHO_T = @ECHO_T@
EGREP = @EGREP@
EXEEXT = @EXEEXT@
F77 = @F77@
FFLAGS = @FFLAGS@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
LDFLAGS = @LDFLAGS@
LIBOBJS = @LIBOBJS@
LIBS = @LIBS@
LIBTOOL = @LIBTOOL@
LN_S = @LN_S@
LTLIBOBJS = @LTLIBOBJS@
MAKEINFO = @MAKEINFO@
OBJEXT = @OBJEXT@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_STRING = @PACKAGE_STRING@
PACKAGE_TARNAME = @PACKAGE_TARNAME@
PACKAGE_VERSION = @PACKAGE_VERSION@
PATH_SEPARATOR = @PATH_SEPARATOR@
RANLIB = @RANLIB@
READLINE_INCLUDE = @READLINE_INCLUDE@
READLINE_LIB = @READLINE_LIB@
SED = @SED@
SET_MAKE = @SET_MAKE@
SHELL = @SHELL@
STRIP = @STRIP@
TBLIB_ROOT = @TBLIB_ROOT@
UNIQUE_STORE_CPPFLAGS = @UNIQUE_STORE_CPPFLAGS@
UNIQUE_STORE_LDFLAGS = @UNIQUE_STORE_LDFLAGS@
VERSION = @VERSION@
WITH_UNIQUE_STORE_FALSE = @WITH_UNIQUE_STORE_FALSE@
WITH_UNIQUE_STORE_TRUE = @WITH_UNIQUE_STORE_TRUE@
ac_ct_AR = @ac_ct_AR@
ac_ct_CC = @ac_ct_CC@
ac_ct_CXX = @ac_ct_CXX@
ac_ct_F77 = @ac_ct_F77@
ac_ct_RANLIB = @ac_ct_RANLIB@
ac_ct_STRIP = @ac_ct_STRIP@
am__fastdepCC_FALSE = @am__fastdepCC_FALSE@
am__fastdepCC_TRUE = @am__fastdepCC_TRUE@
am__fastdepCXX_FALSE = @am__fastdepCXX_FALSE@
am__fastdepCXX_TRUE = @am__fastdepCXX_TRUE@
am__include = @am__include@
am__leading_dot = @am__leading_dot@
am__quote = @am__quote@
am__tar = @am__tar@
am__untar = @am__untar@
bindir = @bindir@
build = @build@
build_alias = @build_alias@
build_cpu = @build_cpu@
build_os = @build_os@
build_vendor = @build_vendor@
datadir = @datadir@
exec_prefix = @exec_prefix@
host = @host@
host_alias = @host_alias@
host_cpu = @host_cpu@
host_os = @host_os@
host_vendor = @host_vendor@
includedir = @includedir@
infodir = @infodir@
install_sh = @install_sh@
libdir = @libdir@
libexecdir = @libexecdir@
localstatedir = @localstatedir@
mandir = @mandir@
mkdir_p = @mkdir_p@
oldincludedir = @oldincludedir@
prefix = @prefix@
program_transform_name = @program_transform_name@
sbindir = @sbindir@
sharedstatedir = @sharedstatedir@
sysconfdir = @sysconfdir@
target_alias = @target_alias@
AM_CPPFLAGS = -I$(top_srcdir)/src\
	    -I$(TBLIB_ROOT)/include/tbsys \
	    -I$(TBLIB_ROOT)/include/tbnet\
	    -fPIC

AM_LDFLAGS = -lrt -lpthread -ldl
noinst_LIBRARIES = libtfsmessage.a
HEADER = dump_plan_message.h client_cmd_message.h heart_message.h\
			 oplog_sync_message.h crc_error_message.h reload_message.h\
			 unlink_file_message.h file_info_message.h rollback_message.h\
			 rename_file_message.h replicate_block_message.h compact_block_message.h\
			 create_filename_message.h server_status_message.h dataserver_message.h\
			 close_file_message.h read_data_message.h write_data_message.h\
			 block_info_message.h admin_cmd_message.h rc_session_message.h\
			 message_factory.h get_dataserver_information_message.h

libtfsmessage_a_SOURCES = dump_plan_message.cpp client_cmd_message.cpp heart_message.cpp\
													oplog_sync_message.cpp crc_error_message.cpp reload_message.cpp\
													unlink_file_message.cpp file_info_message.cpp rollback_message.cpp\
													rename_file_message.cpp replicate_block_message.cpp compact_block_message.cpp\
													create_filename_message.cpp server_status_message.cpp dataserver_message.cpp\
													close_file_message.cpp read_data_message.cpp write_data_message.cpp\
													block_info_message.cpp admin_cmd_message.cpp rc_session_message.cpp\
													message_factory.cpp get_dataserver_information_message.cpp $(HEADER)

libtfsmessage_a_CPPFLAGS = $(AM_CPPFLAGS)
all: all-am

.SUFFIXES:
.SUFFIXES: .cpp .lo .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh \
		&& exit 0; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign  src/message/Makefile'; \
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --foreign  src/message/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

clean-noinstLIBRARIES:
	-test -z "$(noinst_LIBRARIES)" || rm -f $(noinst_LIBRARIES)
libtfsmessage.a: $(libtfsmessage_a_OBJECTS) $(libtfsmessage_a_DEPENDENCIES) 
	-rm -f libtfsmessage.a
	$(libtfsmessage_a_AR) libtfsmessage.a $(libtfsmessage_a_OBJECTS) $(libtfsmessage_a_LIBADD)
	$(RANLIB) libtfsmessage.a

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libtfsmessage_a-admin_cmd_message.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libtfsmessage_a-block_info_message.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libtfsmessage_a-client_cmd_message.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libtfsmessage_a-close_file_message.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libtfsmessage_a-compact_block_message.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libtfsmessage_a-crc_error_message.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libtfsmessage_a-create_filename_message.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libtfsmessage_a-dataserver_message.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libtfsmessage_a-dump_plan_message.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libtfsmessage_a-file_info_message.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libtfsmessage_a-get_dataserver_information_message.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libtfsmessage_a-heart_message.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libtfsmessage_a-message_factory.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libtfsmessage_a-oplog_sync_message.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libtfsmessage_a-rc_session_message.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libtfsmessage_a-read_data_message.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libtfsmessage_a-reload_message.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libtfsmessage_a-rename_file_message.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libtfsmessage_a-replicate_block_message.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libtfsmessage_a-rollback_message.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libtfsmessage_a-server_status_message.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libtfsmessage_a-unlink_file_message.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libtfsmessage_a-write_data_message.Po@am__quote@

.cpp.o:
@am__fastdepCXX_TRUE@	if $(CXXCOMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" -c -o $@ $<; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXXCOMPILE) -c -o $@ $<

.cpp.obj:
@am__fastdepCXX_TRUE@	if $(CXXCOMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" -c -o $@ `$(CYGPATH_W) '$<'`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.cpp.lo:
@am__fastdepCXX_TRUE@	if $(LTCXXCOMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" -c -o $@ $<; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Plo"; else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LTCXXCOMPILE) -c -o $@ $<

libtfsmessage_a-dump_plan_message.o: dump_plan_message.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtfsmessage_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libtfsmessage_a-dump_plan_message.o -MD -MP -MF "$(DEPDIR)/libtfsmessage_a-dump_plan_message.Tpo" -c -o libtfsmessage_a-dump_plan_message.o `test -f 'dump_plan_message.cpp' || echo '$(srcdir)/'`dump_plan_message.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libtfsmessage_a-dump_plan_message.Tpo" "$(DEPDIR)/libtfsmessage_a-dump_plan_message.Po"; else rm -f "$(DEPDIR)/libtfsmessage_a-dump_plan_message.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='dump_plan_message.cpp' object='libtfsmessage_a-dump_plan_message.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtfsmessage_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libtfsmessage_a-dump_plan_message.o `test -f 'dump_plan_message.cpp' || echo '$(srcdir)/'`dump_plan_message.cpp

libtfsmessage_a-dump_plan_message.obj: dump_plan_message.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtfsmessage_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libtfsmessage_a-dump_plan_message.obj -MD -MP -MF "$(DEPDIR)/libtfsmessage_a-dump_plan_message.Tpo" -c -o libtfsmessage_a-dump_plan_message.obj `if test -f 'dump_plan_message.cpp'; then $(CYGPATH_W) 'dump_plan_message.cpp'; else $(CYGPATH_W) '$(srcdir)/dump_plan_message.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libtfsmessage_a-dump_plan_message.Tpo" "$(DEPDIR)/libtfsmessage_a-dump_plan_message.Po"; else rm -f "$(DEPDIR)/libtfsmessage_a-dump_plan_message.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='dump_plan_message.cpp' object='libtfsmessage_a-dump_plan_message.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtfsmessage_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libtfsmessage_a-dump_plan_message.obj `if test -f 'dump_plan_message.cpp'; then $(CYGPATH_W) 'dump_plan_message.cpp'; else $(CYGPATH_W) '$(srcdir)/dump_plan_message.cpp'; fi`

libtfsmessage_a-client_cmd_message.o: client_cmd_message.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtfsmessage_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libtfsmessage_a-client_cmd_message.o -MD -MP -MF "$(DEPDIR)/libtfsmessage_a-client_cmd_message.Tpo" -c -o libtfsmessage_a-client_cmd_message.o `test -f 'client_cmd_message.cpp' || echo '$(srcdir)/'`client_cmd_message.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libtfsmessage_a-client_cmd_message.Tpo" "$(DEPDIR)/libtfsmessage_a-client_cmd_message.Po"; else rm -f "$(DEPDIR)/libtfsmessage_a-client_cmd_message.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='client_cmd_message.cpp' object='libtfsmessage_a-client_cmd_message.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtfsmessage_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libtfsmessage_a-client_cmd_message.o `test -f 'client_cmd_message.cpp' || echo '$(srcdir)/'`client_cmd_message.cpp

libtfsmessage_a-client_cmd_message.obj: client_cmd_message.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtfsmessage_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libtfsmessage_a-client_cmd_message.obj -MD -MP -MF "$(DEPDIR)/libtfsmessage_a-client_cmd_message.Tpo" -c -o libtfsmessage_a-client_cmd_message.obj `if test -f 'client_cmd_message.cpp'; then $(CYGPATH_W) 'client_cmd_message.cpp'; else $(CYGPATH_W) '$(srcdir)/client_cmd_message.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libtfsmessage_a-client_cmd_message.Tpo" "$(DEPDIR)/libtfsmessage_a-client_cmd_message.Po"; else rm -f "$(DEPDIR)/libtfsmessage_a-client_cmd_message.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='client_cmd_message.cpp' object='libtfsmessage_a-client_cmd_message.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtfsmessage_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libtfsmessage_a-client_cmd_message.obj `if test -f 'client_cmd_message.cpp'; then $(CYGPATH_W) 'client_cmd_message.cpp'; else $(CYGPATH_W) '$(srcdir)/client_cmd_message.cpp'; fi`

libtfsmessage_a-heart_message.o: heart_message.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtfsmessage_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libtfsmessage_a-heart_message.o -MD -MP -MF "$(DEPDIR)/libtfsmessage_a-heart_message.Tpo" -c -o libtfsmessage_a-heart_message.o `test -f 'heart_message.cpp' || echo '$(srcdir)/'`heart_message.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libtfsmessage_a-heart_message.Tpo" "$(DEPDIR)/libtfsmessage_a-heart_message.Po"; else rm -f "$(DEPDIR)/libtfsmessage_a-heart_message.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='heart_message.cpp' object='libtfsmessage_a-heart_message.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtfsmessage_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libtfsmessage_a-heart_message.o `test -f 'heart_message.cpp' || echo '$(srcdir)/'`heart_message.cpp

libtfsmessage_a-heart_message.obj: heart_message.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtfsmessage_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libtfsmessage_a-heart_message.obj -MD -MP -MF "$(DEPDIR)/libtfsmessage_a-heart_message.Tpo" -c -o libtfsmessage_a-heart_message.obj `if test -f 'heart_message.cpp'; then $(CYGPATH_W) 'heart_message.cpp'; else $(CYGPATH_W) '$(srcdir)/heart_message.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libtfsmessage_a-heart_message.Tpo" "$(DEPDIR)/libtfsmessage_a-heart_message.Po"; else rm -f "$(DEPDIR)/libtfsmessage_a-heart_message.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='heart_message.cpp' object='libtfsmessage_a-heart_message.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtfsmessage_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libtfsmessage_a-heart_message.obj `if test -f 'heart_message.cpp'; then $(CYGPATH_W) 'heart_message.cpp'; else $(CYGPATH_W) '$(srcdir)/heart_message.cpp'; fi`

libtfsmessage_a-oplog_sync_message.o: oplog_sync_message.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtfsmessage_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libtfsmessage_a-oplog_sync_message.o -MD -MP -MF "$(DEPDIR)/libtfsmessage_a-oplog_sync_message.Tpo" -c -o libtfsmessage_a-oplog_sync_message.o `test -f 'oplog_sync_message.cpp' || echo '$(srcdir)/'`oplog_sync_message.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libtfsmessage_a-oplog_sync_message.Tpo" "$(DEPDIR)/libtfsmessage_a-oplog_sync_message.Po"; else rm -f "$(DEPDIR)/libtfsmessage_a-oplog_sync_message.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='oplog_sync_message.cpp' object='libtfsmessage_a-oplog_sync_message.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtfsmessage_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libtfsmessage_a-oplog_sync_message.o `test -f 'oplog_sync_message.cpp' || echo '$(srcdir)/'`oplog_sync_message.cpp

libtfsmessage_a-oplog_sync_message.obj: oplog_sync_message.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtfsmessage_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libtfsmessage_a-oplog_sync_message.obj -MD -MP -MF "$(DEPDIR)/libtfsmessage_a-oplog_sync_message.Tpo" -c -o libtfsmessage_a-oplog_sync_message.obj `if test -f 'oplog_sync_message.cpp'; then $(CYGPATH_W) 'oplog_sync_message.cpp'; else $(CYGPATH_W) '$(srcdir)/oplog_sync_message.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libtfsmessage_a-oplog_sync_message.Tpo" "$(DEPDIR)/libtfsmessage_a-oplog_sync_message.Po"; else rm -f "$(DEPDIR)/libtfsmessage_a-oplog_sync_message.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='oplog_sync_message.cpp' object='libtfsmessage_a-oplog_sync_message.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtfsmessage_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libtfsmessage_a-oplog_sync_message.obj `if test -f 'oplog_sync_message.cpp'; then $(CYGPATH_W) 'oplog_sync_message.cpp'; else $(CYGPATH_W) '$(srcdir)/oplog_sync_message.cpp'; fi`

libtfsmessage_a-crc_error_message.o: crc_error_message.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtfsmessage_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libtfsmessage_a-crc_error_message.o -MD -MP -MF "$(DEPDIR)/libtfsmessage_a-crc_error_message.Tpo" -c -o libtfsmessage_a-crc_error_message.o `test -f 'crc_error_message.cpp' || echo '$(srcdir)/'`crc_error_message.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libtfsmessage_a-crc_error_message.Tpo" "$(DEPDIR)/libtfsmessage_a-crc_error_message.Po"; else rm -f "$(DEPDIR)/libtfsmessage_a-crc_error_message.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='crc_error_message.cpp' object='libtfsmessage_a-crc_error_message.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtfsmessage_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libtfsmessage_a-crc_error_message.o `test -f 'crc_error_message.cpp' || echo '$(srcdir)/'`crc_error_message.cpp

libtfsmessage_a-crc_error_message.obj: crc_error_message.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtfsmessage_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libtfsmessage_a-crc_error_message.obj -MD -MP -MF "$(DEPDIR)/libtfsmessage_a-crc_error_message.Tpo" -c -o libtfsmessage_a-crc_error_message.obj `if test -f 'crc_error_message.cpp'; then $(CYGPATH_W) 'crc_error_message.cpp'; else $(CYGPATH_W) '$(srcdir)/crc_error_message.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libtfsmessage_a-crc_error_message.Tpo" "$(DEPDIR)/libtfsmessage_a-crc_error_message.Po"; else rm -f "$(DEPDIR)/libtfsmessage_a-crc_error_message.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='crc_error_message.cpp' object='libtfsmessage_a-crc_error_message.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtfsmessage_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libtfsmessage_a-crc_error_message.obj `if test -f 'crc_error_message.cpp'; then $(CYGPATH_W) 'crc_error_message.cpp'; else $(CYGPATH_W) '$(srcdir)/crc_error_message.cpp'; fi`

libtfsmessage_a-reload_message.o: reload_message.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtfsmessage_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libtfsmessage_a-reload_message.o -MD -MP -MF "$(DEPDIR)/libtfsmessage_a-reload_message.Tpo" -c -o libtfsmessage_a-reload_message.o `test -f 'reload_message.cpp' || echo '$(srcdir)/'`reload_message.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libtfsmessage_a-reload_message.Tpo" "$(DEPDIR)/libtfsmessage_a-reload_message.Po"; else rm -f "$(DEPDIR)/libtfsmessage_a-reload_message.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='reload_message.cpp' object='libtfsmessage_a-reload_message.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtfsmessage_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libtfsmessage_a-reload_message.o `test -f 'reload_message.cpp' || echo '$(srcdir)/'`reload_message.cpp

libtfsmessage_a-reload_message.obj: reload_message.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtfsmessage_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libtfsmessage_a-reload_message.obj -MD -MP -MF "$(DEPDIR)/libtfsmessage_a-reload_message.Tpo" -c -o libtfsmessage_a-reload_message.obj `if test -f 'reload_message.cpp'; then $(CYGPATH_W) 'reload_message.cpp'; else $(CYGPATH_W) '$(srcdir)/reload_message.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libtfsmessage_a-reload_message.Tpo" "$(DEPDIR)/libtfsmessage_a-reload_message.Po"; else rm -f "$(DEPDIR)/libtfsmessage_a-reload_message.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='reload_message.cpp' object='libtfsmessage_a-reload_message.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtfsmessage_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libtfsmessage_a-reload_message.obj `if test -f 'reload_message.cpp'; then $(CYGPATH_W) 'reload_message.cpp'; else $(CYGPATH_W) '$(srcdir)/reload_message.cpp'; fi`

libtfsmessage_a-unlink_file_message.o: unlink_file_message.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtfsmessage_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libtfsmessage_a-unlink_file_message.o -MD -MP -MF "$(DEPDIR)/libtfsmessage_a-unlink_file_message.Tpo" -c -o libtfsmessage_a-unlink_file_message.o `test -f 'unlink_file_message.cpp' || echo '$(srcdir)/'`unlink_file_message.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libtfsmessage_a-unlink_file_message.Tpo" "$(DEPDIR)/libtfsmessage_a-unlink_file_message.Po"; else rm -f "$(DEPDIR)/libtfsmessage_a-unlink_file_message.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='unlink_file_message.cpp' object='libtfsmessage_a-unlink_file_message.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtfsmessage_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libtfsmessage_a-unlink_file_message.o `test -f 'unlink_file_message.cpp' || echo '$(srcdir)/'`unlink_file_message.cpp

libtfsmessage_a-unlink_file_message.obj: unlink_file_message.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtfsmessage_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libtfsmessage_a-unlink_file_message.obj -MD -MP -MF "$(DEPDIR)/libtfsmessage_a-unlink_file_message.Tpo" -c -o libtfsmessage_a-unlink_file_message.obj `if test -f 'unlink_file_message.cpp'; then $(CYGPATH_W) 'unlink_file_message.cpp'; else $(CYGPATH_W) '$(srcdir)/unlink_file_message.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libtfsmessage_a-unlink_file_message.Tpo" "$(DEPDIR)/libtfsmessage_a-unlink_file_message.Po"; else rm -f "$(DEPDIR)/libtfsmessage_a-unlink_file_message.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='unlink_file_message.cpp' object='libtfsmessage_a-unlink_file_message.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtfsmessage_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libtfsmessage_a-unlink_file_message.obj `if test -f 'unlink_file_message.cpp'; then $(CYGPATH_W) 'unlink_file_message.cpp'; else $(CYGPATH_W) '$(srcdir)/unlink_file_message.cpp'; fi`

libtfsmessage_a-file_info_message.o: file_info_message.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtfsmessage_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libtfsmessage_a-file_info_message.o -MD -MP -MF "$(DEPDIR)/libtfsmessage_a-file_info_message.Tpo" -c -o libtfsmessage_a-file_info_message.o `test -f 'file_info_message.cpp' || echo '$(srcdir)/'`file_info_message.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libtfsmessage_a-file_info_message.Tpo" "$(DEPDIR)/libtfsmessage_a-file_info_message.Po"; else rm -f "$(DEPDIR)/libtfsmessage_a-file_info_message.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='file_info_message.cpp' object='libtfsmessage_a-file_info_message.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtfsmessage_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libtfsmessage_a-file_info_message.o `test -f 'file_info_message.cpp' || echo '$(srcdir)/'`file_info_message.cpp

libtfsmessage_a-file_info_message.obj: file_info_message.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtfsmessage_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libtfsmessage_a-file_info_message.obj -MD -MP -MF "$(DEPDIR)/libtfsmessage_a-file_info_message.Tpo" -c -o libtfsmessage_a-file_info_message.obj `if test -f 'file_info_message.cpp'; then $(CYGPATH_W) 'file_info_message.cpp'; else $(CYGPATH_W) '$(srcdir)/file_info_message.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libtfsmessage_a-file_info_message.Tpo" "$(DEPDIR)/libtfsmessage_a-file_info_message.Po"; else rm -f "$(DEPDIR)/libtfsmessage_a-file_info_message.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='file_info_message.cpp' object='libtfsmessage_a-file_info_message.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtfsmessage_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libtfsmessage_a-file_info_message.obj `if test -f 'file_info_message.cpp'; then $(CYGPATH_W) 'file_info_message.cpp'; else $(CYGPATH_W) '$(srcdir)/file_info_message.cpp'; fi`

libtfsmessage_a-rollback_message.o: rollback_message.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtfsmessage_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libtfsmessage_a-rollback_message.o -MD -MP -MF "$(DEPDIR)/libtfsmessage_a-rollback_message.Tpo" -c -o libtfsmessage_a-rollback_message.o `test -f 'rollback_message.cpp' || echo '$(srcdir)/'`rollback_message.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libtfsmessage_a-rollback_message.Tpo" "$(DEPDIR)/libtfsmessage_a-rollback_message.Po"; else rm -f "$(DEPDIR)/libtfsmessage_a-rollback_message.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='rollback_message.cpp' object='libtfsmessage_a-rollback_message.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtfsmessage_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libtfsmessage_a-rollback_message.o `test -f 'rollback_message.cpp' || echo '$(srcdir)/'`rollback_message.cpp

libtfsmessage_a-rollback_message.obj: rollback_message.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtfsmessage_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libtfsmessage_a-rollback_message.obj -MD -MP -MF "$(DEPDIR)/libtfsmessage_a-rollback_message.Tpo" -c -o libtfsmessage_a-rollback_message.obj `if test -f 'rollback_message.cpp'; then $(CYGPATH_W) 'rollback_message.cpp'; else $(CYGPATH_W) '$(srcdir)/rollback_message.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libtfsmessage_a-rollback_message.Tpo" "$(DEPDIR)/libtfsmessage_a-rollback_message.Po"; else rm -f "$(DEPDIR)/libtfsmessage_a-rollback_message.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='rollback_message.cpp' object='libtfsmessage_a-rollback_message.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtfsmessage_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libtfsmessage_a-rollback_message.obj `if test -f 'rollback_message.cpp'; then $(CYGPATH_W) 'rollback_message.cpp'; else $(CYGPATH_W) '$(srcdir)/rollback_message.cpp'; fi`

libtfsmessage_a-rename_file_message.o: rename_file_message.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtfsmessage_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libtfsmessage_a-rename_file_message.o -MD -MP -MF "$(DEPDIR)/libtfsmessage_a-rename_file_message.Tpo" -c -o libtfsmessage_a-rename_file_message.o `test -f 'rename_file_message.cpp' || echo '$(srcdir)/'`rename_file_message.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libtfsmessage_a-rename_file_message.Tpo" "$(DEPDIR)/libtfsmessage_a-rename_file_message.Po"; else rm -f "$(DEPDIR)/libtfsmessage_a-rename_file_message.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='rename_file_message.cpp' object='libtfsmessage_a-rename_file_message.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtfsmessage_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libtfsmessage_a-rename_file_message.o `test -f 'rename_file_message.cpp' || echo '$(srcdir)/'`rename_file_message.cpp

libtfsmessage_a-rename_file_message.obj: rename_file_message.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtfsmessage_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libtfsmessage_a-rename_file_message.obj -MD -MP -MF "$(DEPDIR)/libtfsmessage_a-rename_file_message.Tpo" -c -o libtfsmessage_a-rename_file_message.obj `if test -f 'rename_file_message.cpp'; then $(CYGPATH_W) 'rename_file_message.cpp'; else $(CYGPATH_W) '$(srcdir)/rename_file_message.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libtfsmessage_a-rename_file_message.Tpo" "$(DEPDIR)/libtfsmessage_a-rename_file_message.Po"; else rm -f "$(DEPDIR)/libtfsmessage_a-rename_file_message.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='rename_file_message.cpp' object='libtfsmessage_a-rename_file_message.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtfsmessage_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libtfsmessage_a-rename_file_message.obj `if test -f 'rename_file_message.cpp'; then $(CYGPATH_W) 'rename_file_message.cpp'; else $(CYGPATH_W) '$(srcdir)/rename_file_message.cpp'; fi`

libtfsmessage_a-replicate_block_message.o: replicate_block_message.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtfsmessage_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libtfsmessage_a-replicate_block_message.o -MD -MP -MF "$(DEPDIR)/libtfsmessage_a-replicate_block_message.Tpo" -c -o libtfsmessage_a-replicate_block_message.o `test -f 'replicate_block_message.cpp' || echo '$(srcdir)/'`replicate_block_message.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libtfsmessage_a-replicate_block_message.Tpo" "$(DEPDIR)/libtfsmessage_a-replicate_block_message.Po"; else rm -f "$(DEPDIR)/libtfsmessage_a-replicate_block_message.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='replicate_block_message.cpp' object='libtfsmessage_a-replicate_block_message.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtfsmessage_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libtfsmessage_a-replicate_block_message.o `test -f 'replicate_block_message.cpp' || echo '$(srcdir)/'`replicate_block_message.cpp

libtfsmessage_a-replicate_block_message.obj: replicate_block_message.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtfsmessage_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libtfsmessage_a-replicate_block_message.obj -MD -MP -MF "$(DEPDIR)/libtfsmessage_a-replicate_block_message.Tpo" -c -o libtfsmessage_a-replicate_block_message.obj `if test -f 'replicate_block_message.cpp'; then $(CYGPATH_W) 'replicate_block_message.cpp'; else $(CYGPATH_W) '$(srcdir)/replicate_block_message.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libtfsmessage_a-replicate_block_message.Tpo" "$(DEPDIR)/libtfsmessage_a-replicate_block_message.Po"; else rm -f "$(DEPDIR)/libtfsmessage_a-replicate_block_message.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='replicate_block_message.cpp' object='libtfsmessage_a-replicate_block_message.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtfsmessage_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libtfsmessage_a-replicate_block_message.obj `if test -f 'replicate_block_message.cpp'; then $(CYGPATH_W) 'replicate_block_message.cpp'; else $(CYGPATH_W) '$(srcdir)/replicate_block_message.cpp'; fi`

libtfsmessage_a-compact_block_message.o: compact_block_message.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtfsmessage_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libtfsmessage_a-compact_block_message.o -MD -MP -MF "$(DEPDIR)/libtfsmessage_a-compact_block_message.Tpo" -c -o libtfsmessage_a-compact_block_message.o `test -f 'compact_block_message.cpp' || echo '$(srcdir)/'`compact_block_message.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libtfsmessage_a-compact_block_message.Tpo" "$(DEPDIR)/libtfsmessage_a-compact_block_message.Po"; else rm -f "$(DEPDIR)/libtfsmessage_a-compact_block_message.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='compact_block_message.cpp' object='libtfsmessage_a-compact_block_message.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtfsmessage_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libtfsmessage_a-compact_block_message.o `test -f 'compact_block_message.cpp' || echo '$(srcdir)/'`compact_block_message.cpp

libtfsmessage_a-compact_block_message.obj: compact_block_message.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtfsmessage_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libtfsmessage_a-compact_block_message.obj -MD -MP -MF "$(DEPDIR)/libtfsmessage_a-compact_block_message.Tpo" -c -o libtfsmessage_a-compact_block_message.obj `if test -f 'compact_block_message.cpp'; then $(CYGPATH_W) 'compact_block_message.cpp'; else $(CYGPATH_W) '$(srcdir)/compact_block_message.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libtfsmessage_a-compact_block_message.Tpo" "$(DEPDIR)/libtfsmessage_a-compact_block_message.Po"; else rm -f "$(DEPDIR)/libtfsmessage_a-compact_block_message.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='compact_block_message.cpp' object='libtfsmessage_a-compact_block_message.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtfsmessage_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libtfsmessage_a-compact_block_message.obj `if test -f 'compact_block_message.cpp'; then $(CYGPATH_W) 'compact_block_message.cpp'; else $(CYGPATH_W) '$(srcdir)/compact_block_message.cpp'; fi`

libtfsmessage_a-create_filename_message.o: create_filename_message.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtfsmessage_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libtfsmessage_a-create_filename_message.o -MD -MP -MF "$(DEPDIR)/libtfsmessage_a-create_filename_message.Tpo" -c -o libtfsmessage_a-create_filename_message.o `test -f 'create_filename_message.cpp' || echo '$(srcdir)/'`create_filename_message.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libtfsmessage_a-create_filename_message.Tpo" "$(DEPDIR)/libtfsmessage_a-create_filename_message.Po"; else rm -f "$(DEPDIR)/libtfsmessage_a-create_filename_message.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='create_filename_message.cpp' object='libtfsmessage_a-create_filename_message.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtfsmessage_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libtfsmessage_a-create_filename_message.o `test -f 'create_filename_message.cpp' || echo '$(srcdir)/'`create_filename_message.cpp

libtfsmessage_a-create_filename_message.obj: create_filename_message.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtfsmessage_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libtfsmessage_a-create_filename_message.obj -MD -MP -MF "$(DEPDIR)/libtfsmessage_a-create_filename_message.Tpo" -c -o libtfsmessage_a-create_filename_message.obj `if test -f 'create_filename_message.cpp'; then $(CYGPATH_W) 'create_filename_message.cpp'; else $(CYGPATH_W) '$(srcdir)/create_filename_message.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libtfsmessage_a-create_filename_message.Tpo" "$(DEPDIR)/libtfsmessage_a-create_filename_message.Po"; else rm -f "$(DEPDIR)/libtfsmessage_a-create_filename_message.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='create_filename_message.cpp' object='libtfsmessage_a-create_filename_message.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtfsmessage_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libtfsmessage_a-create_filename_message.obj `if test -f 'create_filename_message.cpp'; then $(CYGPATH_W) 'create_filename_message.cpp'; else $(CYGPATH_W) '$(srcdir)/create_filename_message.cpp'; fi`

libtfsmessage_a-server_status_message.o: server_status_message.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtfsmessage_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libtfsmessage_a-server_status_message.o -MD -MP -MF "$(DEPDIR)/libtfsmessage_a-server_status_message.Tpo" -c -o libtfsmessage_a-server_status_message.o `test -f 'server_status_message.cpp' || echo '$(srcdir)/'`server_status_message.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libtfsmessage_a-server_status_message.Tpo" "$(DEPDIR)/libtfsmessage_a-server_status_message.Po"; else rm -f "$(DEPDIR)/libtfsmessage_a-server_status_message.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='server_status_message.cpp' object='libtfsmessage_a-server_status_message.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtfsmessage_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libtfsmessage_a-server_status_message.o `test -f 'server_status_message.cpp' || echo '$(srcdir)/'`server_status_message.cpp

libtfsmessage_a-server_status_message.obj: server_status_message.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtfsmessage_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libtfsmessage_a-server_status_message.obj -MD -MP -MF "$(DEPDIR)/libtfsmessage_a-server_status_message.Tpo" -c -o libtfsmessage_a-server_status_message.obj `if test -f 'server_status_message.cpp'; then $(CYGPATH_W) 'server_status_message.cpp'; else $(CYGPATH_W) '$(srcdir)/server_status_message.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libtfsmessage_a-server_status_message.Tpo" "$(DEPDIR)/libtfsmessage_a-server_status_message.Po"; else rm -f "$(DEPDIR)/libtfsmessage_a-server_status_message.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='server_status_message.cpp' object='libtfsmessage_a-server_status_message.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtfsmessage_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libtfsmessage_a-server_status_message.obj `if test -f 'server_status_message.cpp'; then $(CYGPATH_W) 'server_status_message.cpp'; else $(CYGPATH_W) '$(srcdir)/server_status_message.cpp'; fi`

libtfsmessage_a-dataserver_message.o: dataserver_message.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtfsmessage_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libtfsmessage_a-dataserver_message.o -MD -MP -MF "$(DEPDIR)/libtfsmessage_a-dataserver_message.Tpo" -c -o libtfsmessage_a-dataserver_message.o `test -f 'dataserver_message.cpp' || echo '$(srcdir)/'`dataserver_message.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libtfsmessage_a-dataserver_message.Tpo" "$(DEPDIR)/libtfsmessage_a-dataserver_message.Po"; else rm -f "$(DEPDIR)/libtfsmessage_a-dataserver_message.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='dataserver_message.cpp' object='libtfsmessage_a-dataserver_message.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtfsmessage_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libtfsmessage_a-dataserver_message.o `test -f 'dataserver_message.cpp' || echo '$(srcdir)/'`dataserver_message.cpp

libtfsmessage_a-dataserver_message.obj: dataserver_message.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtfsmessage_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libtfsmessage_a-dataserver_message.obj -MD -MP -MF "$(DEPDIR)/libtfsmessage_a-dataserver_message.Tpo" -c -o libtfsmessage_a-dataserver_message.obj `if test -f 'dataserver_message.cpp'; then $(CYGPATH_W) 'dataserver_message.cpp'; else $(CYGPATH_W) '$(srcdir)/dataserver_message.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libtfsmessage_a-dataserver_message.Tpo" "$(DEPDIR)/libtfsmessage_a-dataserver_message.Po"; else rm -f "$(DEPDIR)/libtfsmessage_a-dataserver_message.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='dataserver_message.cpp' object='libtfsmessage_a-dataserver_message.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtfsmessage_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libtfsmessage_a-dataserver_message.obj `if test -f 'dataserver_message.cpp'; then $(CYGPATH_W) 'dataserver_message.cpp'; else $(CYGPATH_W) '$(srcdir)/dataserver_message.cpp'; fi`

libtfsmessage_a-close_file_message.o: close_file_message.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtfsmessage_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libtfsmessage_a-close_file_message.o -MD -MP -MF "$(DEPDIR)/libtfsmessage_a-close_file_message.Tpo" -c -o libtfsmessage_a-close_file_message.o `test -f 'close_file_message.cpp' || echo '$(srcdir)/'`close_file_message.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libtfsmessage_a-close_file_message.Tpo" "$(DEPDIR)/libtfsmessage_a-close_file_message.Po"; else rm -f "$(DEPDIR)/libtfsmessage_a-close_file_message.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='close_file_message.cpp' object='libtfsmessage_a-close_file_message.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtfsmessage_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libtfsmessage_a-close_file_message.o `test -f 'close_file_message.cpp' || echo '$(srcdir)/'`close_file_message.cpp

libtfsmessage_a-close_file_message.obj: close_file_message.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtfsmessage_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libtfsmessage_a-close_file_message.obj -MD -MP -MF "$(DEPDIR)/libtfsmessage_a-close_file_message.Tpo" -c -o libtfsmessage_a-close_file_message.obj `if test -f 'close_file_message.cpp'; then $(CYGPATH_W) 'close_file_message.cpp'; else $(CYGPATH_W) '$(srcdir)/close_file_message.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libtfsmessage_a-close_file_message.Tpo" "$(DEPDIR)/libtfsmessage_a-close_file_message.Po"; else rm -f "$(DEPDIR)/libtfsmessage_a-close_file_message.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='close_file_message.cpp' object='libtfsmessage_a-close_file_message.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtfsmessage_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libtfsmessage_a-close_file_message.obj `if test -f 'close_file_message.cpp'; then $(CYGPATH_W) 'close_file_message.cpp'; else $(CYGPATH_W) '$(srcdir)/close_file_message.cpp'; fi`

libtfsmessage_a-read_data_message.o: read_data_message.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtfsmessage_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libtfsmessage_a-read_data_message.o -MD -MP -MF "$(DEPDIR)/libtfsmessage_a-read_data_message.Tpo" -c -o libtfsmessage_a-read_data_message.o `test -f 'read_data_message.cpp' || echo '$(srcdir)/'`read_data_message.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libtfsmessage_a-read_data_message.Tpo" "$(DEPDIR)/libtfsmessage_a-read_data_message.Po"; else rm -f "$(DEPDIR)/libtfsmessage_a-read_data_message.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='read_data_message.cpp' object='libtfsmessage_a-read_data_message.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtfsmessage_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libtfsmessage_a-read_data_message.o `test -f 'read_data_message.cpp' || echo '$(srcdir)/'`read_data_message.cpp

libtfsmessage_a-read_data_message.obj: read_data_message.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtfsmessage_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libtfsmessage_a-read_data_message.obj -MD -MP -MF "$(DEPDIR)/libtfsmessage_a-read_data_message.Tpo" -c -o libtfsmessage_a-read_data_message.obj `if test -f 'read_data_message.cpp'; then $(CYGPATH_W) 'read_data_message.cpp'; else $(CYGPATH_W) '$(srcdir)/read_data_message.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libtfsmessage_a-read_data_message.Tpo" "$(DEPDIR)/libtfsmessage_a-read_data_message.Po"; else rm -f "$(DEPDIR)/libtfsmessage_a-read_data_message.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='read_data_message.cpp' object='libtfsmessage_a-read_data_message.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtfsmessage_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libtfsmessage_a-read_data_message.obj `if test -f 'read_data_message.cpp'; then $(CYGPATH_W) 'read_data_message.cpp'; else $(CYGPATH_W) '$(srcdir)/read_data_message.cpp'; fi`

libtfsmessage_a-write_data_message.o: write_data_message.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtfsmessage_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libtfsmessage_a-write_data_message.o -MD -MP -MF "$(DEPDIR)/libtfsmessage_a-write_data_message.Tpo" -c -o libtfsmessage_a-write_data_message.o `test -f 'write_data_message.cpp' || echo '$(srcdir)/'`write_data_message.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libtfsmessage_a-write_data_message.Tpo" "$(DEPDIR)/libtfsmessage_a-write_data_message.Po"; else rm -f "$(DEPDIR)/libtfsmessage_a-write_data_message.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='write_data_message.cpp' object='libtfsmessage_a-write_data_message.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtfsmessage_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libtfsmessage_a-write_data_message.o `test -f 'write_data_message.cpp' || echo '$(srcdir)/'`write_data_message.cpp

libtfsmessage_a-write_data_message.obj: write_data_message.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtfsmessage_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libtfsmessage_a-write_data_message.obj -MD -MP -MF "$(DEPDIR)/libtfsmessage_a-write_data_message.Tpo" -c -o libtfsmessage_a-write_data_message.obj `if test -f 'write_data_message.cpp'; then $(CYGPATH_W) 'write_data_message.cpp'; else $(CYGPATH_W) '$(srcdir)/write_data_message.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libtfsmessage_a-write_data_message.Tpo" "$(DEPDIR)/libtfsmessage_a-write_data_message.Po"; else rm -f "$(DEPDIR)/libtfsmessage_a-write_data_message.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='write_data_message.cpp' object='libtfsmessage_a-write_data_message.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtfsmessage_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libtfsmessage_a-write_data_message.obj `if test -f 'write_data_message.cpp'; then $(CYGPATH_W) 'write_data_message.cpp'; else $(CYGPATH_W) '$(srcdir)/write_data_message.cpp'; fi`

libtfsmessage_a-block_info_message.o: block_info_message.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtfsmessage_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libtfsmessage_a-block_info_message.o -MD -MP -MF "$(DEPDIR)/libtfsmessage_a-block_info_message.Tpo" -c -o libtfsmessage_a-block_info_message.o `test -f 'block_info_message.cpp' || echo '$(srcdir)/'`block_info_message.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libtfsmessage_a-block_info_message.Tpo" "$(DEPDIR)/libtfsmessage_a-block_info_message.Po"; else rm -f "$(DEPDIR)/libtfsmessage_a-block_info_message.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='block_info_message.cpp' object='libtfsmessage_a-block_info_message.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtfsmessage_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libtfsmessage_a-block_info_message.o `test -f 'block_info_message.cpp' || echo '$(srcdir)/'`block_info_message.cpp

libtfsmessage_a-block_info_message.obj: block_info_message.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtfsmessage_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libtfsmessage_a-block_info_message.obj -MD -MP -MF "$(DEPDIR)/libtfsmessage_a-block_info_message.Tpo" -c -o libtfsmessage_a-block_info_message.obj `if test -f 'block_info_message.cpp'; then $(CYGPATH_W) 'block_info_message.cpp'; else $(CYGPATH_W) '$(srcdir)/block_info_message.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libtfsmessage_a-block_info_message.Tpo" "$(DEPDIR)/libtfsmessage_a-block_info_message.Po"; else rm -f "$(DEPDIR)/libtfsmessage_a-block_info_message.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='block_info_message.cpp' object='libtfsmessage_a-block_info_message.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtfsmessage_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libtfsmessage_a-block_info_message.obj `if test -f 'block_info_message.cpp'; then $(CYGPATH_W) 'block_info_message.cpp'; else $(CYGPATH_W) '$(srcdir)/block_info_message.cpp'; fi`

libtfsmessage_a-admin_cmd_message.o: admin_cmd_message.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtfsmessage_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libtfsmessage_a-admin_cmd_message.o -MD -MP -MF "$(DEPDIR)/libtfsmessage_a-admin_cmd_message.Tpo" -c -o libtfsmessage_a-admin_cmd_message.o `test -f 'admin_cmd_message.cpp' || echo '$(srcdir)/'`admin_cmd_message.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libtfsmessage_a-admin_cmd_message.Tpo" "$(DEPDIR)/libtfsmessage_a-admin_cmd_message.Po"; else rm -f "$(DEPDIR)/libtfsmessage_a-admin_cmd_message.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='admin_cmd_message.cpp' object='libtfsmessage_a-admin_cmd_message.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtfsmessage_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libtfsmessage_a-admin_cmd_message.o `test -f 'admin_cmd_message.cpp' || echo '$(srcdir)/'`admin_cmd_message.cpp

libtfsmessage_a-admin_cmd_message.obj: admin_cmd_message.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtfsmessage_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libtfsmessage_a-admin_cmd_message.obj -MD -MP -MF "$(DEPDIR)/libtfsmessage_a-admin_cmd_message.Tpo" -c -o libtfsmessage_a-admin_cmd_message.obj `if test -f 'admin_cmd_message.cpp'; then $(CYGPATH_W) 'admin_cmd_message.cpp'; else $(CYGPATH_W) '$(srcdir)/admin_cmd_message.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libtfsmessage_a-admin_cmd_message.Tpo" "$(DEPDIR)/libtfsmessage_a-admin_cmd_message.Po"; else rm -f "$(DEPDIR)/libtfsmessage_a-admin_cmd_message.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='admin_cmd_message.cpp' object='libtfsmessage_a-admin_cmd_message.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtfsmessage_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libtfsmessage_a-admin_cmd_message.obj `if test -f 'admin_cmd_message.cpp'; then $(CYGPATH_W) 'admin_cmd_message.cpp'; else $(CYGPATH_W) '$(srcdir)/admin_cmd_message.cpp'; fi`

libtfsmessage_a-rc_session_message.o: rc_session_message.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtfsmessage_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libtfsmessage_a-rc_session_message.o -MD -MP -MF "$(DEPDIR)/libtfsmessage_a-rc_session_message.Tpo" -c -o libtfsmessage_a-rc_session_message.o `test -f 'rc_session_message.cpp' || echo '$(srcdir)/'`rc_session_message.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libtfsmessage_a-rc_session_message.Tpo" "$(DEPDIR)/libtfsmessage_a-rc_session_message.Po"; else rm -f "$(DEPDIR)/libtfsmessage_a-rc_session_message.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='rc_session_message.cpp' object='libtfsmessage_a-rc_session_message.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtfsmessage_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libtfsmessage_a-rc_session_message.o `test -f 'rc_session_message.cpp' || echo '$(srcdir)/'`rc_session_message.cpp

libtfsmessage_a-rc_session_message.obj: rc_session_message.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtfsmessage_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libtfsmessage_a-rc_session_message.obj -MD -MP -MF "$(DEPDIR)/libtfsmessage_a-rc_session_message.Tpo" -c -o libtfsmessage_a-rc_session_message.obj `if test -f 'rc_session_message.cpp'; then $(CYGPATH_W) 'rc_session_message.cpp'; else $(CYGPATH_W) '$(srcdir)/rc_session_message.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libtfsmessage_a-rc_session_message.Tpo" "$(DEPDIR)/libtfsmessage_a-rc_session_message.Po"; else rm -f "$(DEPDIR)/libtfsmessage_a-rc_session_message.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='rc_session_message.cpp' object='libtfsmessage_a-rc_session_message.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtfsmessage_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libtfsmessage_a-rc_session_message.obj `if test -f 'rc_session_message.cpp'; then $(CYGPATH_W) 'rc_session_message.cpp'; else $(CYGPATH_W) '$(srcdir)/rc_session_message.cpp'; fi`

libtfsmessage_a-message_factory.o: message_factory.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtfsmessage_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libtfsmessage_a-message_factory.o -MD -MP -MF "$(DEPDIR)/libtfsmessage_a-message_factory.Tpo" -c -o libtfsmessage_a-message_factory.o `test -f 'message_factory.cpp' || echo '$(srcdir)/'`message_factory.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libtfsmessage_a-message_factory.Tpo" "$(DEPDIR)/libtfsmessage_a-message_factory.Po"; else rm -f "$(DEPDIR)/libtfsmessage_a-message_factory.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='message_factory.cpp' object='libtfsmessage_a-message_factory.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtfsmessage_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libtfsmessage_a-message_factory.o `test -f 'message_factory.cpp' || echo '$(srcdir)/'`message_factory.cpp

libtfsmessage_a-message_factory.obj: message_factory.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtfsmessage_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libtfsmessage_a-message_factory.obj -MD -MP -MF "$(DEPDIR)/libtfsmessage_a-message_factory.Tpo" -c -o libtfsmessage_a-message_factory.obj `if test -f 'message_factory.cpp'; then $(CYGPATH_W) 'message_factory.cpp'; else $(CYGPATH_W) '$(srcdir)/message_factory.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libtfsmessage_a-message_factory.Tpo" "$(DEPDIR)/libtfsmessage_a-message_factory.Po"; else rm -f "$(DEPDIR)/libtfsmessage_a-message_factory.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='message_factory.cpp' object='libtfsmessage_a-message_factory.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtfsmessage_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libtfsmessage_a-message_factory.obj `if test -f 'message_factory.cpp'; then $(CYGPATH_W) 'message_factory.cpp'; else $(CYGPATH_W) '$(srcdir)/message_factory.cpp'; fi`

libtfsmessage_a-get_dataserver_information_message.o: get_dataserver_information_message.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtfsmessage_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libtfsmessage_a-get_dataserver_information_message.o -MD -MP -MF "$(DEPDIR)/libtfsmessage_a-get_dataserver_information_message.Tpo" -c -o libtfsmessage_a-get_dataserver_information_message.o `test -f 'get_dataserver_information_message.cpp' || echo '$(srcdir)/'`get_dataserver_information_message.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libtfsmessage_a-get_dataserver_information_message.Tpo" "$(DEPDIR)/libtfsmessage_a-get_dataserver_information_message.Po"; else rm -f "$(DEPDIR)/libtfsmessage_a-get_dataserver_information_message.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='get_dataserver_information_message.cpp' object='libtfsmessage_a-get_dataserver_information_message.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtfsmessage_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libtfsmessage_a-get_dataserver_information_message.o `test -f 'get_dataserver_information_message.cpp' || echo '$(srcdir)/'`get_dataserver_information_message.cpp

libtfsmessage_a-get_dataserver_information_message.obj: get_dataserver_information_message.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtfsmessage_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libtfsmessage_a-get_dataserver_information_message.obj -MD -MP -MF "$(DEPDIR)/libtfsmessage_a-get_dataserver_information_message.Tpo" -c -o libtfsmessage_a-get_dataserver_information_message.obj `if test -f 'get_dataserver_information_message.cpp'; then $(CYGPATH_W) 'get_dataserver_information_message.cpp'; else $(CYGPATH_W) '$(srcdir)/get_dataserver_information_message.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libtfsmessage_a-get_dataserver_information_message.Tpo" "$(DEPDIR)/libtfsmessage_a-get_dataserver_information_message.Po"; else rm -f "$(DEPDIR)/libtfsmessage_a-get_dataserver_information_message.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='get_dataserver_information_message.cpp' object='libtfsmessage_a-get_dataserver_information_message.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libtfsmessage_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libtfsmessage_a-get_dataserver_information_message.obj `if test -f 'get_dataserver_information_message.cpp'; then $(CYGPATH_W) 'get_dataserver_information_message.cpp'; else $(CYGPATH_W) '$(srcdir)/get_dataserver_information_message.cpp'; fi`

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

distclean-libtool:
	-rm -f libtool
uninstall-info-am:

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	if test -z "$(ETAGS_ARGS)$$tags$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	    $$tags $$unique; \
	fi
ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(CTAGS_ARGS)$$tags$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$tags $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && cd $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) $$here

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's|.|.|g'`; \
	list='$(DISTFILES)'; for file in $$list; do \
	  case $$file in \
	    $(srcdir)/*) file=`echo "$$file" | sed "s|^$$srcdirstrip/||"`;; \
	    $(top_srcdir)/*) file=`echo "$$file" | sed "s|^$$topsrcdirstrip/|$(top_builddir)/|"`;; \
	  esac; \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  dir=`echo "$$file" | sed -e 's,/[^/]*$$,,'`; \
	  if test "$$dir" != "$$file" && test "$$dir" != "."; then \
	    dir="/$$dir"; \
	    $(mkdir_p) "$(distdir)$$dir"; \
	  else \
	    dir=''; \
	  fi; \
	  if test -d $$d/$$file; then \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
	    fi; \
	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile $(LIBRARIES)
installdirs:
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-generic clean-libtool clean-noinstLIBRARIES \
	mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-libtool distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

info: info-am

info-am:

install-data-am:

install-exec-am:

install-info: install-info-am

install-man:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-info-am

.PHONY: CTAGS GTAGS all all-am check check-am clean clean-generic \
	clean-libtool clean-noinstLIBRARIES ctags distclean \
	distclean-compile distclean-generic distclean-libtool \
	distclean-tags distdir dvi dvi-am html html-am info info-am \
	install install-am install-data install-data-am install-exec \
	install-exec-am install-info install-info-am install-man \
	install-strip installcheck installcheck-am installdirs \
	maintainer-clean maintainer-clean-generic mostlyclean \
	mostlyclean-compile mostlyclean-generic mostlyclean-libtool \
	pdf pdf-am ps ps-am tags uninstall uninstall-am \
	uninstall-info-am


install:
# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
